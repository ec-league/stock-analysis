<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sapphire.stock.analysis.common.dal.dao.StockDailyDigestDao">
    <resultMap id="BaseResultMap" type="com.sapphire.stock.analysis.common.dal.model.StockDailyDigestDO">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="CODE" jdbcType="VARCHAR" property="code"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="START_PRICE" jdbcType="DECIMAL" property="startPrice"/>
        <result column="END_PRICE" jdbcType="DECIMAL" property="endPrice"/>
        <result column="HIGHEST_PRICE" jdbcType="DECIMAL" property="highestPrice"/>
        <result column="LOWEST_PRICE" jdbcType="DECIMAL" property="lowestPrice"/>
        <result column="PARTITION_DATE" jdbcType="VARCHAR" property="partitionDate"/>
        <result column="TRADING_VOLUME" jdbcType="DECIMAL" property="tradingVolume"/>
        <result column="BUSINESS_VOLUME" jdbcType="DECIMAL" property="businessVolume"/>
        <result column="TURNOVER_RATE" jdbcType="DOUBLE" property="turnoverRate"/>
        <result column="PE" jdbcType="DOUBLE" property="pe"/>
        <result column="PB" jdbcType="DOUBLE" property="pb"/>
        <result column="TOTAL_VALUE" jdbcType="DECIMAL" property="totalValue"/>
        <result column="CIRCULATION_MARKET_VALUE" jdbcType="DECIMAL" property="circulationMarketValue"/>
        <result column="GMT_CREATE" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="GMT_MODIFIED" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID, CODE, `NAME`, START_PRICE, END_PRICE, HIGHEST_PRICE, LOWEST_PRICE, PARTITION_DATE,
    TRADING_VOLUME, BUSINESS_VOLUME, TURNOVER_RATE, PE, PB, TOTAL_VALUE, CIRCULATION_MARKET_VALUE, 
    GMT_CREATE, GMT_MODIFIED
    </sql>
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from STOCK_DAILY_DIGEST
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByCodeAndPartitionDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from STOCK_DAILY_DIGEST
        where CODE = #{code} AND PARTITION_DATE = #{partitionDate}
    </select>
    <delete id="deleteById" parameterType="java.lang.Long">
        delete
        from STOCK_DAILY_DIGEST
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="ID" keyProperty="id"
            parameterType="com.sapphire.stock.analysis.common.dal.model.StockDailyDigestDO" useGeneratedKeys="true">
        insert into STOCK_DAILY_DIGEST (CODE, `NAME`, START_PRICE,
                                        END_PRICE, HIGHEST_PRICE, LOWEST_PRICE,
                                        PARTITION_DATE, TRADING_VOLUME, BUSINESS_VOLUME,
                                        TURNOVER_RATE, PE, PB,
                                        TOTAL_VALUE, CIRCULATION_MARKET_VALUE, GMT_CREATE,
                                        GMT_MODIFIED)
        values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{startPrice,jdbcType=DECIMAL},
                #{endPrice,jdbcType=DECIMAL}, #{highestPrice,jdbcType=DECIMAL}, #{lowestPrice,jdbcType=DECIMAL},
                #{partitionDate,jdbcType=VARCHAR}, #{tradingVolume,jdbcType=DECIMAL},
                #{businessVolume,jdbcType=DECIMAL},
                #{turnoverRate,jdbcType=DOUBLE}, #{pe,jdbcType=DOUBLE}, #{pb,jdbcType=DOUBLE},
                #{totalValue,jdbcType=DECIMAL}, #{circulationMarketValue,jdbcType=DECIMAL},
                CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    </insert>
    <insert id="insertAll">
        insert into STOCK_DAILY_DIGEST (CODE, START_PRICE,
        END_PRICE, HIGHEST_PRICE, LOWEST_PRICE,
        PARTITION_DATE, CMT_CREATE, GMT_MODIFIED) VALUES
        <foreach collection="list" item="item"
                 separator=",">
            (
            #{item.code},
            #{item.name},
            #{item.startPrice},
            #{item.endPrice},
            #{item.highestPrice},
            #{item.partitionDate},
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
            )
        </foreach>
    </insert>
    <update id="updateById" parameterType="com.sapphire.stock.analysis.common.dal.model.StockDailyDigestDO">
        update STOCK_DAILY_DIGEST
        set `NAME`                   = #{name,jdbcType=VARCHAR},
            START_PRICE              = #{startPrice,jdbcType=DECIMAL},
            END_PRICE                = #{endPrice,jdbcType=DECIMAL},
            HIGHEST_PRICE            = #{highestPrice,jdbcType=DECIMAL},
            LOWEST_PRICE             = #{lowestPrice,jdbcType=DECIMAL},
            PARTITION_DATE           = #{partitionDate,jdbcType=VARCHAR},
            TRADING_VOLUME           = #{tradingVolume,jdbcType=DECIMAL},
            BUSINESS_VOLUME          = #{businessVolume,jdbcType=DECIMAL},
            TURNOVER_RATE            = #{turnoverRate,jdbcType=DOUBLE},
            PE                       = #{pe,jdbcType=DOUBLE},
            PB                       = #{pb,jdbcType=DOUBLE},
            TOTAL_VALUE              = #{totalValue,jdbcType=DECIMAL},
            CIRCULATION_MARKET_VALUE = #{circulationMarketValue,jdbcType=DECIMAL},
            GMT_MODIFIED             = CURRENT_TIMESTAMP
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByCodeAndPartitionDate"
            parameterType="com.sapphire.stock.analysis.common.dal.model.StockDailyDigestDO">
        update STOCK_DAILY_DIGEST
        set `NAME`                   = #{name,jdbcType=VARCHAR},
            START_PRICE              = #{startPrice,jdbcType=DECIMAL},
            END_PRICE                = #{endPrice,jdbcType=DECIMAL},
            HIGHEST_PRICE            = #{highestPrice,jdbcType=DECIMAL},
            LOWEST_PRICE             = #{lowestPrice,jdbcType=DECIMAL},
            TRADING_VOLUME           = #{tradingVolume,jdbcType=DECIMAL},
            BUSINESS_VOLUME          = #{businessVolume,jdbcType=DECIMAL},
            TURNOVER_RATE            = #{turnoverRate,jdbcType=DOUBLE},
            PE                       = #{pe,jdbcType=DOUBLE},
            PB                       = #{pb,jdbcType=DOUBLE},
            TOTAL_VALUE              = #{totalValue,jdbcType=DECIMAL},
            CIRCULATION_MARKET_VALUE = #{circulationMarketValue,jdbcType=DECIMAL},
            GMT_MODIFIED             = CURRENT_TIMESTAMP
        where CODE = #{code}
          AND PARTITION_DATE = #{partitionDate}
    </update>
</mapper>